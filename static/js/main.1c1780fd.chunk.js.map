{"version":3,"sources":["utils.js","SingleColor.js","App.js","index.js"],"names":["componentToHex","c","hex","toString","length","rgbToHex","r","g","b","SingleColor","rgb","weight","index","hexColor","console","log","useState","alert","setAlert","bsg","join","hexValue","useEffect","timeout","setTimeout","clearTimeout","className","style","backgroundColor","onClick","navigator","clipboard","writeText","App","color","setColor","error","setError","Values","all","list","setList","onSubmit","e","preventDefault","colors","type","value","onChange","target","placeholder","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAAA,SAASA,EAAeC,GACtB,IAAIC,EAAMD,EAAEE,SAAS,IACrB,OAAqB,GAAdD,EAAIE,OAAc,IAAMF,EAAMA,EAOxBG,MAJf,SAAkBC,EAAGC,EAAGC,GACtB,MAAO,IAAMR,EAAeM,GAAKN,EAAeO,GAAKP,EAAeQ,ICqBvDC,EAxBK,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SACxCC,QAAQC,IAAIF,GAD0C,MAE5BG,oBAAS,GAFmB,mBAE/CC,EAF+C,KAExCC,EAFwC,KAGhDC,EAAMT,EAAIU,KAAK,KAEfC,GADMhB,EAAQ,WAAR,cAAYK,IACV,WAAOG,IASrB,OARAS,qBAAU,WACR,IAAMC,EAAUC,YAAW,WACzBN,GAAS,KACR,KACH,OAAO,kBAAMO,aAAaF,MACzB,CAACN,IAGG,6BAASS,UAAS,gBAAWd,EAAQ,IAAM,eAAiBe,MAAO,CAACC,gBAAgB,OAAD,OAAQT,EAAR,MAAiBU,QAAS,WAClHX,GAAS,GACTY,UAAUC,UAAUC,UAAUX,KAE9B,uBAAGK,UAAU,iBAAiBf,EAA9B,KACA,uBAAGe,UAAU,eAAeL,GAC3BJ,GAAS,uBAAGS,UAAU,SAAb,yB,gBCiBCO,MAnCf,WAAgB,IAAD,EACajB,mBAAS,IADtB,mBACNkB,EADM,KACCC,EADD,OAEanB,oBAAS,GAFtB,mBAENoB,EAFM,KAECC,EAFD,OAGWrB,mBAAS,IAAIsB,IAAO,WAAWC,IAAI,KAH9C,mBAGNC,EAHM,KAGAC,EAHA,KAiBb,OACE,oCACA,6BAASf,UAAU,aACjB,+CACN,0BAAMgB,SAhBiB,SAACC,GACpBA,EAAEC,iBACF,IACE,IAAIC,EAAS,IAAIP,IAAOJ,GAAOK,IAAI,IACnCE,EAAQI,GACR/B,QAAQC,IAAI8B,GACZ,MAAMT,GACNC,GAAS,GACTvB,QAAQC,IAAIqB,MAShB,2BAAOU,KAAK,OAAOC,MAAOb,EAAOc,SAAU,SAACL,GAAD,OAAOR,EAASQ,EAAEM,OAAOF,QAAQG,YAAY,UAAUxB,UAAS,UAAKU,EAAM,QAAQ,QAC9H,4BAAQV,UAAU,MAAMoB,KAAK,UAA7B,YAGE,6BAASpB,UAAU,UAChBc,EAAKW,KAAI,SAACjB,EAAOtB,GAChB,OAAO,kBAAC,EAAD,eAAawC,IAAKxC,GAAWsB,EAA7B,CAAoCtB,MAASA,EAAOC,SAAUqB,EAAMhC,aC5BnFmD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.1c1780fd.chunk.js","sourcesContent":["function componentToHex(c) {\r\n  var hex = c.toString(16);\r\n  return hex.length == 1 ? '0' + hex : hex;\r\n}\r\n\r\nfunction rgbToHex(r, g, b) {\r\n  return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n}\r\n\r\nexport default rgbToHex;\r\n","import React, { useState, useEffect } from 'react'\r\nimport rgbToHex from './utils'\r\n\r\nconst SingleColor = ({rgb, weight, index, hexColor}) => {\r\n  console.log(hexColor);\r\n  const [alert, setAlert] = useState(false);\r\n  const bsg = rgb.join(',');\r\n  const hex = rgbToHex(...rgb);\r\n  const hexValue = `#${hexColor}`;\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setAlert(false);\r\n    }, 3000)\r\n    return () => clearTimeout(timeout);\r\n  }, [alert]);\r\n\r\n\r\n  return <article className={`color ${index > 10 && 'color-light'}`} style={{backgroundColor:`rgb(${bsg})`}} onClick={() => {\r\n    setAlert(true);\r\n    navigator.clipboard.writeText(hexValue);\r\n  }}>\r\n    <p className=\"percent-value\">{weight}%</p>\r\n    <p className=\"color-value\">{hexValue}</p>\r\n    {alert && <p className=\"alert\">copied to clipboard</p>}\r\n    </article>\r\n}\r\n\r\nexport default SingleColor\r\n","import React, { useState } from 'react'\r\nimport SingleColor from './SingleColor'\r\n\r\nimport Values from 'values.js'\r\n\r\nfunction App() {\r\n  const [color, setColor] = useState('');\r\n  const [error, setError] = useState(false);\r\n  const [list, setList] = useState(new Values('#f15025').all(10));\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      let colors = new Values(color).all(10);\r\n      setList(colors);\r\n      console.log(colors);\r\n    } catch(error) {\r\n      setError(true);\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  return(\r\n    <>\r\n    <section className=\"container\">\r\n      <h3>color generator</h3>\r\n<form onSubmit={handleSubmit}>\r\n  <input type=\"text\" value={color} onChange={(e) => setColor(e.target.value)} placeholder=\"#f15025\" className={`${error?'error':null}`} />\r\n  <button className=\"btn\" type=\"submit\">submit</button>\r\n</form>\r\n    </section>\r\n    <section className=\"colors\">\r\n      {list.map((color, index) =>{\r\n        return <SingleColor key={index} {...color} index = {index} hexColor={color.hex}/>\r\n      })}\r\n    </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}